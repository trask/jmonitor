<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2010 the original author or authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jmonitor</groupId>
    <artifactId>jmonitor-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>jmonitor-probes</artifactId>

  <name>JMonitor Probes</name>
  <description>Probes component of JMonitor which is woven into ear and war files by the installer</description>

  <properties>
    <spring.framework.version>3.0.5.RELEASE</spring.framework.version>
  </properties>

  <!-- all dependencies are "provided" for probes -->
  <!-- TODO make sure probes only use libraries in jmonitor-runtime -->
  <dependencies>
    <dependency>
      <groupId>org.jmonitor</groupId>
      <artifactId>jmonitor-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- used for concurrent weak hash map -->
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jmonitor</groupId>
      <artifactId>jmonitor-runtime</artifactId>
      <version>${project.version}</version>
      <!-- TODO change this back to test scope
           remove ref to org.jmonitor.configuration.service.model.AgentConfiguration in ServletProbe -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jmonitor</groupId>
      <artifactId>jmonitor-runtime</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.148</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.framework.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.framework.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of spring-jdbc which we need -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.framework.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!--
        used to run tests against a proxied jdbc connections which are common in application server
        environments (although this is primarily useful in case runtime weaving is supported in the
        future which would expose these application server proxies to the weaving process)
      -->
      <groupId>p6spy</groupId>
      <artifactId>p6spy</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <configuration>
              <aspectLibraries>
                <!--
                  need this in order to pick up ConfigurationAspect in the
                  jmonitor-runtime:test-jar another option is to run the tests using LTW
                -->
                <aspectLibrary>
                  <groupId>org.jmonitor</groupId>
                  <artifactId>jmonitor-runtime</artifactId>
                </aspectLibrary>
              </aspectLibraries>
              <weaveDependencies>
                <weaveDependency>
                  <!--
                    the tests perform jdbc calls via spring-jdbc, so this artifact need to be woven
                    in order for the monitor to capture those jdbc executions during test
                  -->
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jdbc</artifactId>
                </weaveDependency>
              </weaveDependencies>
            </configuration>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <workingDirectory>${project.build.directory}</workingDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <!-- overriding behavior inherited from jmonitor-parent -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <excludeFilterFile>${basedir}/src/main/config/jmonitor-findbugs-exclude.xml</excludeFilterFile>
          <!--
            this is needed because the tests weave the classes from the spring jdbc artifact into
            the test-classes directory which are then picked up by FindBugs. excluding the package
            org.springframework.jdbc in the findbugs filter prevents FindBugs from reporting on
            issues in this artifact, however the report still complains about "missing classes" that
            are optional dependencies of the spring jdbc artifact. filtering the test class files
            here addresses both issues.
          -->
          <testClassFilesDirectory>${project.build.testOutputDirectory}/org/jmonitor</testClassFilesDirectory>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
