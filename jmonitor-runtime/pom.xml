<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010 the original author or authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jmonitor</groupId>
    <artifactId>jmonitor-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>jmonitor-runtime</artifactId>

  <name>JMonitor Runtime</name>
  <description>Runtime component of JMonitor which is woven into ear and war files by the installer</description>

  <dependencies>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.6.11</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <!-- used for concurrent weak hash map -->
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>10.0.1</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.7</version>
      <exclusions>
        <exclusion>
          <!--
            cannot use commons-beanutil-core because commons-configuration includes
            commons-digester which includes commons-beanutils and so we need to use the
            same here otherwise we end up with both (not sure if commons-digester requires
            commons-beanutils or if it could get away with just commons-beanutils-core)
          -->
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!--
        cannot use commons-beanutil-core because commons-configuration includes
        commons-digester which includes commons-beanutils and so we need to use the
        same here otherwise we end up with both (not sure if commons-digester requires
        commons-beanutils or if it could get away with just commons-beanutils-core)
      -->
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.8.3</version>
    </dependency>
    <dependency>
      <!-- used for base64 encoding / decoding -->
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <!-- used for email alerts -->
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.4</version>
    </dependency>
    <dependency>
      <groupId>org.jasypt</groupId>
      <artifactId>jasypt</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
      <!-- required by jasypt runtime on JDK 1.4 and JDK 5 -->
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>4.8.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.3.0</version>
      <!-- only needed for gwt compilation -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>2.3.0</version>
    </dependency>
    <dependency>
      <groupId>com.pietschy</groupId>
      <artifactId>gwt-pectin</artifactId>
      <version>0.8.1</version>
      <!-- only needed for gwt compilation -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!--
        this dependency is only included to override the scope of the
        transitive dependency from commons-email. it is marked provided
        because it should be provided by the application server
      -->
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!--
        this dependency is only included to override the scope of the
        transitive dependency from commons-email. it is marked provided
        because it should be provided by the application server
      -->
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- test only dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!--
        used to run tests against a proxied jdbc connections which are common in application server
        environments (although this is primarily useful in case runtime weaving is supported in the
        future which would expose these application server proxies to the weaving process)
      -->
      <groupId>p6spy</groupId>
      <artifactId>p6spy</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>3.0.6.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>3.0.6.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of spring-jdbc which we need -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>3.0.6.RELEASE</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--
          creates directory for the generated gwts files
          so it can be added to list of resources below
        -->
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <configuration>
          <target>
            <mkdir dir="${project.build.directory}/generated/gwt" />
          </target>
        </configuration>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
          adds directory created above as a resource directory
          which will contain the generated gwt files
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <configuration>
          <resources>
            <resource>
              <directory>${project.build.directory}/generated/gwt</directory>
            </resource>
          </resources>
        </configuration>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.4</version>
        <configuration>
          <Xlint>ignore</Xlint>
          <source>1.5</source>
          <target>1.5</target>
          <!--
            default location ends up under target/classes and then in artifact jar file.
            so we change this to write the builddef.lst file to the target directory
            so it won't end up in artifact jar file.
          -->
          <argumentFileName>../builddef.lst</argumentFileName>
        </configuration>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <configuration>
              <weaveDependencies>
                <weaveDependency>
                  <!--
                    the tests perform jdbc calls via spring-jdbc, so this artifact needs to be
                    woven in order for the monitor to capture those jdbc executions during test
                  -->
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jdbc</artifactId>
                </weaveDependency>
              </weaveDependencies>
            </configuration>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <!-- this version should match the gwt version being used -->
        <version>2.3.0-1</version>
        <executions>
          <execution>
            <configuration>
              <modules>
                <module>org.jmonitor.configuration.Configuration</module>
                <module>org.jmonitor.ui.Monitor</module>
              </modules>
              <webappDirectory>${project.build.directory}/generated/gwt</webappDirectory>
              <deploy>${project.build.directory}/generated/gwtextra</deploy>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
          run resources:resources a second time to catch the gwt resources
          generated during the compile phase above
        -->
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>second-time</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createSourcesJar>true</createSourcesJar>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/maven/**</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>commons-configuration:commons-configuration</artifact>
                  <excludes>
                    <exclude>digesterRules.xml</exclude>
                    <exclude>properties.dtd</exclude>
                    <exclude>PropertyList-1.0.dtd</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>com.ibm.icu:icu4j</artifact>
                  <excludes>
                    <exclude>license.html</exclude>
                    <exclude>unicode-license.txt</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>commons-beanutils:commons-beanutils</artifact>
                  <excludes>
                    <!--
                      there are a few classes from commons-collections
                      (which is already included via commons-configuration)
                      that are duplicated inside of the commons-beanutils artifact
                    -->
                    <exclude>org/apache/commons/collections/**</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>com.google.common</pattern>
                  <shadedPattern>org.jmonitor.shaded.google.common</shadedPattern>
                </relocation>
                <!--
                  cannot shade gwt because then deserialization of ArrayList fails because
                  hash of ArrayList_CustomFieldSerializer changes when its package name changes
                -->
                <!-- TODO research options to reduce conflict -->
                <!--relocation>
                  <pattern>com.google.gwt</pattern>
                  <shadedPattern>org.jmonitor.shaded.google.gwt</shadedPattern>
                  </relocation>
                  <relocation>
                  <pattern>com.google.web.bindery</pattern>
                  <shadedPattern>org.jmonitor.shaded.google.web.bindery</shadedPattern>
                  </relocation>
                  <relocation>
                  <pattern>
                  javax.validation.ConstraintViolationException_CustomFieldSerializer
                  </pattern>
                  <shadedPattern>
                  org.jmonitor.shaded.javax.validation.ConstraintViolationException_CustomFieldSerializer
                  </shadedPattern>
                  </relocation -->
                <relocation>
                  <pattern>org.apache.commons</pattern>
                  <shadedPattern>org.jmonitor.shaded.apache.commons</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.jasypt</pattern>
                  <shadedPattern>org.jmonitor.shaded.jasypt</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.ibm.icu</pattern>
                  <shadedPattern>org.jmonitor.shaded.ibm.icu</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>ch.qos.logback</pattern>
                  <shadedPattern>org.jmonitor.shaded.qos.logback</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.slf4j</pattern>
                  <shadedPattern>org.jmonitor.shaded.slf4j</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.aopalliance</pattern>
                  <shadedPattern>org.jmonitor.shaded.aopalliance</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.aspectj</pattern>
                  <shadedPattern>org.jmonitor.shaded.aspectj</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>javax.annotation</pattern>
                  <shadedPattern>org.jmonitor.shaded.javax.annotation</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <!--
            This plugin's configuration is used to store Eclipse m2e settings only.
            It has no influence on the Maven build itself.
          -->
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>
                      build-helper-maven-plugin
                    </artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>add-resource</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>
                      aspectj-maven-plugin
                    </artifactId>
                    <versionRange>[1.4,)</versionRange>
                    <goals>
                      <goal>compile</goal>
                      <goal>test-compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[1.3.0-1,)</versionRange>
                    <goals>
                      <goal>compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
